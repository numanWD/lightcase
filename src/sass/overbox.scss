@import "modules/variables";
@import "modules/animations";

@media screen {

  .overbox-open {
    & body {
      padding: 55px 0 70px 0;
      overflow-y: hidden;
      @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
        padding: 0;
      }
    }
    & body > *:not([id*=overbox-]) {
     @media (max-width: #{map-get($overbox-vars , 'breakpoint')}) {
        position: fixed !important;
        top: -9999px !important;

        width: 0 !important;
        height: 0 !important;

        overflow: hidden !important;
      }
    }
}

  /* Overlay */
  #overbox-overlay {
    display: none;
    width: 100%;
    height: 100%;
    position: fixed;
    z-index: 1000;
    top: 0;
    left: 0;
    background: map-get($overbox-vars , 'overlay-background');
  }

  /* Loading */
  #overbox-loading {
    position: fixed;
    z-index: 1001;
    top: 50%;
    left: 50%;
    color: #aaa;
    margin-top: -0.5em;
    margin-left: -0.5em;
    opacity: 1;
    font-size: 32px;

    background-image: url('#{map-get($overbox-vars , 'icons-path')}loading.svg');

    /* Fixes the icon wobble issue in firefox */
    -moz-transform-origin: 50% 53%;
    @include animation(overbox-loading-spin 0.5s infinite linear);

    @media (min-width: #{map-get($overbox-vars , 'breakpoint')}){
      color: #fff;
      text-shadow: 0 0 15px #fff;
    }
  }

  /* Case */
  #overbox-case {
    display: none;

    position: fixed;
    z-index: 1002;
    top: 50%;
    left: 50%;
    font-family: arial, sans-serif;
    font-size: 13px;
    line-height: 18px;
    text-align: left;

    text-shadow: 0 0 10px rgba(0, 0, 0, 0.5);


    &:not([data-type=image]):not([data-type=video]):not([data-type=flash]):not([data-type=error]),
    &:not([data-type=image]):not([data-type=video]):not([data-type=flash]):not([data-type=error]) .overbox-contentInner,
    &:not([data-type=image]):not([data-type=video]):not([data-type=flash]):not([data-type=error]) .overbox-inlineWrap {

      @media (max-width: #{map-get($overbox-vars , 'breakpoint')}) {
        position: relative !important;

        top: auto !important;
        left: auto !important;

        width: auto !important;
        height: auto !important;

        margin: 0 !important;
        padding: 0 !important;

        border: none;
        background: none;
      }
    }

    &:not([data-type=error]) .overbox-content {
      @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
        position: relative;
        z-index: 1;
        overflow: hidden;

        text-shadow: none;
        background-color: #fff;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.5);

        -webkit-backface-visibility: hidden;
      }
    }
    &[data-type=image] .overbox-content,
    &[data-type=video] .overbox-content {
      @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
        background-color: #333;
      }
    }
    &[data-type=image] .overbox-contentInner,
    &[data-type=video] .overbox-contentInner {
      @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
        line-height: 0.75;
      }
    }
    &:not([data-type=error]) .overbox-inlineWrap {
      @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
        padding: 30px;
        overflow: auto;
        box-sizing: border-box;
      }
    }



  }




  /*
 * Content - Extend with further selectors and colors in case you
 * have elements like <ul>, <li>, <span> or similar displayed in overbox.
 */
  #overbox-case .overbox-content h1,
  #overbox-case .overbox-content h2,
  #overbox-case .overbox-content h3,
  #overbox-case .overbox-content h4,
  #overbox-case .overbox-content h5,
  #overbox-case .overbox-content h6,
  #overbox-case .overbox-content p {
    color: #aaa;
    @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
      color: #333;
    }
  }


  /* Additional info */
  #overbox-case .overbox-info {
    /*
     * You can change to position "static" or "relative" instead, but consider
     * that this height will be integrated and calculated
     * to the maximum height additionally to the image height.
     */
    position: absolute;
    padding-top: 15px;
    @include padding(null 15px);

    @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
      @include padding(null 0);
    }
  }


  #overbox-case .overbox-title,
  #overbox-case .overbox-caption {
    margin: 0;
    padding: 0;

    line-height: 1.5;
    font-weight: normal;
    text-overflow: ellipsis;
  }
  #overbox-case .overbox-title {
    font-size: map-get($overbox-vars , 'title-font-size');
    color:map-get($overbox-vars , 'title-color');
  }

  #overbox-case .overbox-caption {
    font-size: map-get($overbox-vars , 'caption-font-size');
    color:map-get($overbox-vars , 'caption-color');
    clear: both;
  }

  #overbox-case .overbox-sequenceInfo {
    font-size: map-get($overbox-vars , 'sequence-info-font-size');
    color:map-get($overbox-vars , 'sequence-info-color');
  }


  #overbox-case:not([data-type=image]):not([data-type=video]):not([data-type=flash]):not([data-type=error]) .overbox-info {
    position: static;
  }

  #overbox-case:not([data-type=image]):not([data-type=video]):not([data-type=flash]):not([data-type=error]) .overbox-content {
    padding: 15px;
    border: none;
    background: none;

    box-shadow: none;
  }
  #overbox-case:not([data-type=image]):not([data-type=video]):not([data-type=flash]):not([data-type=error]) .overbox-contentInner,
  #overbox-case:not([data-type=image]):not([data-type=video]):not([data-type=flash]):not([data-type=error]) .overbox-contentInner > * {
    @media (max-width: #{map-get($overbox-vars , 'breakpoint')}){
      width: 100% !important;
      max-width: none !important;
    }
  }

  /*
   * Set auto height to each element except iframes, because of that
   * those cannot have a natural/native height and it must be especially defined.
   */
  #overbox-case:not([data-type=image]):not([data-type=video]):not([data-type=flash]):not([data-type=error]) .overbox-contentInner > *:not(iframe) {
    @media (max-width: #{map-get($overbox-vars , 'breakpoint')}) {
      height: auto !important;
      max-height: none !important;
    }
  }




  /* Navigation */
  .overbox-open #overbox-nav[data-ispartofsequence]:before {
    @media (max-width: #{map-get($overbox-vars , 'breakpoint')}) {
      content: '';
      position: fixed;
      z-index: 9998;
      right: 0;
      bottom: 0;
      left: 0;
      height: 55px;

      background: map-get($overbox-vars , 'mobile-navigation-background');
    }
  }

  #overbox-nav {
    & a {
      position: fixed;
      z-index: 9999;
      bottom: 15px;

      outline: none;
      cursor: pointer;
      font-size: 24px;
      background-size: contain;
      background-repeat: no-repeat;

      @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
        bottom: 50%;
        margin-bottom: -0.5em;

        outline: none;
        cursor: pointer;
      }
    }
    & a:hover {
      text-shadow: 0 0 15px #fff;
    }
  }

  /* Icons */
  [class*='overbox-icon-'] {
    width: map-get($overbox-vars , 'icon-size');
    height: map-get($overbox-vars , 'icon-size');
  }

  a[class*='overbox-icon-'],
  a[class*='overbox-icon-']:focus {
    position: fixed;
    z-index: 9999;

    text-decoration: none;
    color: rgba(255, 255, 255, 0.6);

    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);

    @include transition(color, opacity, ease-in-out 0.25s);
  }
  a[class*='overbox-icon-']:hover {
    color: rgba(255, 255, 255, 1);
  }
  a[class*='overbox-icon-'] > span {
    display: inline-block;
    text-indent: -9999px;
  }


  #overbox-nav .overbox-icon-close {
    position: absolute;
    z-index: 9997;
    top: 15px;
    right: 15px;

    opacity: 0;
    background-image: url('#{map-get($overbox-vars , 'icons-path')}close.svg');

    @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
      margin: 0;
      position: fixed;
      z-index: 9997;

      top: 15px;
      right: 15px;

      outline: none;
    }
  }

  #overbox-nav .overbox-icon-pause,
  #overbox-nav .overbox-icon-play {
    left: 50%;
    margin-left: -0.5em;

    @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
      opacity: 0;
      left: 50%;
      margin-left: -0.5em;
    }
  }
  #overbox-nav .overbox-icon-pause {
    background-image: url('#{map-get($overbox-vars , 'icons-path')}pause.svg')
  }
  #overbox-nav .overbox-icon-play {
    background-image: url('#{map-get($overbox-vars , 'icons-path')}play.svg');
  }
  #overbox-nav .overbox-icon-prev {
    left: 15px;
    background-image: url('#{map-get($overbox-vars , 'icons-path')}prev.svg');
  }
  #overbox-nav .overbox-icon-next {
    right: 15px;
    background-image: url('#{map-get($overbox-vars , 'icons-path')}next.svg');
  }
  #overbox-nav a:hover,
  #overbox-case:hover ~ #overbox-nav a {
    @media (min-width: #{map-get($overbox-vars , 'breakpoint')}) {
      opacity: 1;
    }
  }


  /* For mobile (touch) devices */
  .overbox-isMobileDevice #overbox-case .overbox-inlineWrap,
  .overbox-isMobileDevice #overbox-case[data-type=iframe] .overbox-contentInner {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  .overbox-isMobileDevice.overbox-open,
  .overbox-isMobileDevice.overbox-open body {
    max-width: 100%;
    max-height: 100%;
    overflow: hidden;
  }

  .overbox-isMobileDevice #overbox-nav a:hover {
    color: #aaa;
    text-shadow: none;
  }


  /* Error message */
  #overbox-case p.overbox-error {
    padding: 30px 0;
    font-size: 17px;
    text-align: center;

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    color: #aaa;

    @media (min-width: map-get($overbox-vars , 'breakpoint')) {
      margin: 0;
      padding: 0;
      font-size: 17px;
      color: #aaa;
    }
  }
}